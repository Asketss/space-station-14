using JetBrains.Annotations;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;

namespace Content.Client.Administration.UI.Tabs.RoundTab
{
    [GenerateTypedNameReferences]
    [UsedImplicitly]
    public sealed partial class ActiveGameRulesWindow : DefaultWindow
    {
        private string? _selectedGamerule;

        protected override void EnteredTree()
        {
            SubmitEndGameruleButton.OnPressed += SubmitEndGameruleButtonOnPressed;
            SubmitClearGamerulesButton.OnPressed += SubmitClearGamerulesButtonOnPressed;
            //GamerulesList.OnSelectionChanged += OnListOnOnSelectionChanged;
        }

        private void OnListOnOnSelectionChanged(string? obj)
        {

        }

        private void SubmitEndGameruleButtonOnPressed(BaseButton.ButtonEventArgs obj)
        {
            if (_selectedGamerule == null)
                return;

            //IoCManager.Resolve<IClientConsoleHost>().ExecuteCommand(
            //    $"kick \"{_selectedPlayer.Username}\" \"{CommandParsing.Escape(ReasonLine.Text)}\"");
        }

        private void SubmitClearGamerulesButtonOnPressed(BaseButton.ButtonEventArgs obj)
        {
            if (_selectedGamerule == null)
                return;

            //IoCManager.Resolve<IClientConsoleHost>().ExecuteCommand(
            //    $"openahelp \"{_selectedPlayer.SessionId}\"");
        }
    }
}
